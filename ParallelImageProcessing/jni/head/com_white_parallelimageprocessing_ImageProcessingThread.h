/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_white_parallelimageprocessing_ImageProcessingThread */

#ifndef _Included_com_white_parallelimageprocessing_ImageProcessingThread
#define _Included_com_white_parallelimageprocessing_ImageProcessingThread
#ifdef __cplusplus
extern "C" {
#endif
#undef com_white_parallelimageprocessing_ImageProcessingThread_MIN_PRIORITY
#define com_white_parallelimageprocessing_ImageProcessingThread_MIN_PRIORITY 1L
#undef com_white_parallelimageprocessing_ImageProcessingThread_NORM_PRIORITY
#define com_white_parallelimageprocessing_ImageProcessingThread_NORM_PRIORITY 5L
#undef com_white_parallelimageprocessing_ImageProcessingThread_MAX_PRIORITY
#define com_white_parallelimageprocessing_ImageProcessingThread_MAX_PRIORITY 10L
/*
 * Class:     com_white_parallelimageprocessing_ImageProcessingThread
 * Method:    getDeviceInfo
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_white_parallelimageprocessing_ImageProcessingThread_getDeviceInfo(
		JNIEnv *, jobject);

/*
 * Class:     com_white_parallelimageprocessing_ImageProcessingThread
 * Method:    SRADdenoising
 * Signature: (Ljava/lang/String;I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_white_parallelimageprocessing_ImageProcessingThread_SRADdenoising(
		JNIEnv *, jobject, jstring, jint);

/*
 * Class:     com_white_parallelimageprocessing_ImageProcessingThread
 * Method:    sobelfilter
 * Signature: (Ljava/lang/String;I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_white_parallelimageprocessing_ImageProcessingThread_sobelfilter(
		JNIEnv *, jobject, jstring, jint);

/*
 * Class:     com_white_parallelimageprocessing_ImageProcessingThread
 * Method:    sha1entryption
 * Signature: (Ljava/lang/String;I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_white_parallelimageprocessing_ImageProcessingThread_sha1entryption(
		JNIEnv *, jobject, jstring, jint);

/*
 * Class:     com_white_parallelimageprocessing_ImageProcessingThread
 * Method:    bilateralfilter
 * Signature: (Ljava/lang/String;I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_white_parallelimageprocessing_ImageProcessingThread_bilateralfilter(
		JNIEnv*, jobject, jobject, jobject, jobject, jint, jint, jint);

/*
 * Class:     com_white_parallelimageprocessing_ImageProcessingThread
 * Method:    multmatrix
 * Signature: (II)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_white_parallelimageprocessing_ImageProcessingThread_multmatrix(
		JNIEnv *, jobject, jint, jint);

/*
 * Class:     com_white_parallelimageprocessing_ImageProcessingThread
 * Method:    gaussianBlurFilter
 * Signature: (Ljava/lang/String;I)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_white_parallelimageprocessing_ImageProcessingThread_gaussianBlurFilter(
		JNIEnv *, jobject, jstring, jint);

#ifdef __cplusplus
}
#endif
#endif
